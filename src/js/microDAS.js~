/* JSDAS
* Copyright (C) 2008-2009 Bernat Gel
*
* This program is free software: you can redistribute it and/or modify
* it under the terms of the GNU General Public License as published by
* the Free Software Foundation; either version 3 of the License, or
* (at your option) any later version.
*
* This program is distributed in the hope that it will be useful,
* but WITHOUT ANY WARRANTY; without even the implied warranty of
* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
* GNU General Public License for more details.
*
* You should have received a copy of the GNU General Public License
* along with this program. If not, see <http://www.gnu.org/licenses/>.
*/


var getFeatures = function(url) {
	
	JSDAS.Demo.setStatus("Loading Features...", false);
	$('results_content').html('<img src="../img/wait.gif">');
	JSDAS.features(url, processFeatures);
}

var processFeatures = function(response) {
	JSDAS.Demo.setStatus("Features Received... Processing starts", false);

	

	var results_div = $('results_content');
	//results_div.clear();
	var showTable =1;
	if(showTable) {
	    JSDAS.Demo.setStatus("Creating Table...", false);
	    //We've got the features and we're done with DAS. Now, just do something with them
	    var features = response.GFF.SEGMENT[0].FEATURE;
	    var table = '<table class="results">';
	    table += '<thead><tr><th>Id</th><th>Type</th><th>Method</th><th>Start</th><th>End</th><th>Score</th><th>Orientation</th><th>Link</th></tr></thead>';
	    table += '<tbody>';
	    for(var i=0, l=features.length; i<l; ++i) {
		var f = features[i];
		table += '<tr>';
		table += '<td>'+((f.label)?f.label+'<br>':'')+f.id+'</td>';
		table += '<td>'+((f.TYPE)?(f.TYPE.textContent || f.TYPE.id || ''):'NOT PRESENT')+'</td>';
		table += '<td>'+((f.METHOD)?(f.METHOD.textContent || f.METHOD.id || ''):'NOT PRESENT')+'</td>';
		table += '<td>'+((f.START)?(f.START.textContent || ''):'NOT PRESENT')+'</td>';
		table += '<td>'+((f.END)?(f.END.textContent || ''):'NOT PRESENT')+'</td>';
		table += '<td>'+((f.SCORE)?(f.SCORE.textContent || ''):'NOT PRESENT')+'</td>';
		table += '<td>'+((f.ORIENTATION)?(f.ORIENTATION.textContent || ''):'NOT PRESENT')+'</td>';
		if(f.LINK && f.LINK[0] && f.LINK[0].href) { //Use only the first available link
		  table += '<td><a href="'+f.LINK[0].href+'">'+(f.LINK[0].textContent || f.LINK[0].href)+'</a></td>';
		} else {
		  table += '<td></td>';
		}
		table +='</tr>';
	    }
	    table += '</tbody>';
	    table += '</table>';
	    
	    results_div.append(table);
	}
	 
	var showGraphical = true;
	if(showGraphical) {
	    JSDAS.Demo.setStatus("Drawing...", false);
	    var features = preprocessFeatures(response.GFF.SEGMENT[0].FEATURE); //TODO: construyir la taula amb això, també	   
	    var drwData = [];
	    for(var i=0, l=features.length; i<l; ++i) {
		    var f = features[i];
		    if(f.start && f.end && f.start!=0 &&f.end!=0) {
			f.line = 1;
			drwData.push(f);
		    }
	    }
	      var drw =$("#drawing_area");
	      var label = "seq";
	      var drawer = GenDrawer(drw[0], drw.width(), drw.height(), {multiline: 1, num_lines: 1, seq_label: label}); //use drw[0] because GenDrawer expects a real element, not a jQuery Object.
	      //drawer.setStyles(drawingStyles);
	      drawer.draw(drwData);
	}

	JSDAS.Demo.setStatus("Done");
}

var preprocessFeatures = function(feats) {
    var new_feats = [];
    for(var i=0, l=feats.length; i<l; ++i) {
	var f = feats[i];
	newfeats.push({
		label: (f.label)?f.label:((f.id)?f.id:''),
		type: ((f.TYPE)?(f.TYPE.textContent || f.TYPE.id || undefined):undefined),
		method: ((f.METHOD)?(f.METHOD.textContent || f.METHOD.id || undefined):undefined),
		start: ((f.START && f.START.textContent != undefined)?f.START.textContent:undefined),
		end: ((f.END && f.END.textContent != undefined)?f.END.textContent:undefined),
		score: ((f.SCORE && f.SCORE.textContent != undefined)?f.SCORE.textContent:undefined),
		strand: ((f.ORIENTATION && f.ORIENTATION.textContent)?f.ORIENTATION.textContent:undefined),
		link: (f.LINK && f.LINK[0] && f.LINK[0].href)?f.LINK[0].href:undefined
	});
     }
    return new_feats;
}